# yaml-language-server: $schema=https://json.schemastore.org/helmfile
#vernMQTT pods deployment config with sidecar for listener
#listener -> a golang script (just intake message bytes) -> push to output stream (in this case, pub/sub)

apiVersion: apps/v1
kind: Deployment
metadata:
  name: vernemq-broker
  namespace: {{ .Release.Namespace | default .Values.namespace }} 
  labels:
    app: broker
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: broker
  template:
    metadata:
      labels:
        app: broker 
    spec:
      serviceAccountName: vernemq 
      #shared emptyDir vol
      volumes:
        - name: envs
          emptyDir: {}

    #node address(for access gcp emulator - not for prod!)
{{- if eq .Values.env "dev" }}          
      initContainers:
        - name: init-host-ip
          image: busybox
          command:
          - sh
          - -c
          - echo "$(ip route | awk '/default/ {print $3}')" > /envs/host_ip
          volumeMounts:
            - name: envs
              mountPath: /envs
{{- end }}

{{- if eq .Values.env "prod" }}
    #set mode = prod (for prod)
      initContainers: 
        - name: init-mode-setter
          image: busybox
          command:
          - sh
          - c
          - echo "prod" > {{ .Values.listenerConfig.modePath }}
        volumeMounts:
          - name: envs
            mountPath: /envs
{{- end }}

      containers:
        - name:  vernemq
          image: vernemq/vernemq
          resources:
          {{- with .Values.resourceOptions.verne }}
            requests:
              {{- with .requests }}
              memory: {{ .memory | quote }}
              cpu: {{ .cpu | quote }}
              {{- end }}
            limits:
              {{- with .limits }}
              memory: {{ .memory | quote }}
              cpu: {{ .cpu | quote }}
              {{- end }}
          {{- end }}
          ports:
            - name: tcpline
              containerPort: 1883 
            - name: metrics
              containerPort: 8888
          envFrom:
          - configMapRef:
              name: verne-conf

        - name: listener
          image: {{ .Values.image }} 
          resources:
          {{- with .Values.resourceOptions.listener }}
            requests:
              {{- with .requests }}
              memory: {{ .memory | quote }}
              cpu: {{ .cpu | quote }}
              {{- end }}
            limits:
              {{- with .limits }}
              memory: {{ .memory | quote }}
              cpu: {{ .cpu | quote }}
              {{- end }}
          {{- end }}
          envFrom:
          - configMapRef: 
              name: verne-conf
          #wait for verne container at :1883 to be ready
          command:
            - sh
            - -c
            - |
              until netstat -tln | grep -q "127.0.0.1:$MQTT_PORT"; do
                sleep 2
              done
              exec /app/listenerproc
          #check log (connection established)
          readinessProbe:
            exec:
              #check if connected to both verneMQTT + PubSub 
              command:
                - sh
                - -c
                - 'grep -q "SUCCESS" $MQTT_CONNECT_SUCCESS_PATH && grep -q "SUCCESS" $PUBSUB_CONNECT_SUCCESS_PATH' 
            initialDelaySeconds: 10
            periodSeconds: 2
          volumeMounts:
          - name: envs
            mountPath: /envs