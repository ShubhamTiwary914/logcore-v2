#vernMQTT pods deployment config with sidecar for listener
#listener -> a golang script (just intake message bytes) -> push to output stream (in this case, pub/sub)

apiVersion: apps/v1
kind: Deployment
metadata:
  name: vernemq-broker
  namespace: verne
  labels:
    app: broker
spec:
  replicas: 5
  selector:
    matchLabels:
      app: broker
  template:
    metadata:
      labels:
        app: broker
    spec:
      serviceAccountName: vernemq 

      #shared emptyDir vol
      volumes:
        - name: envs
          emptyDir: {}
          
      #allow access to node (access gcp emulator - not for prod!)
      initContainers:
        - name: init-host-ip
          image: busybox
          command:
          - sh
          - -c
          - echo "$(ip route | awk '/default/ {print $3}')" > /envs/host_ip
          volumeMounts:
            - name: envs
              mountPath: /envs

      containers:
        - name:  vernemq
          image: vernemq/vernemq
          ports:
          - containerPort: 1883
          - containerPort: 8888
          env:
          - name: DOCKER_VERNEMQ_ACCEPT_EULA
            value: "yes"
          - name: DOCKER_VERNEMQ_ALLOW_ANONYMOUS
            value: "on" 

        - name: listener
          image: sardinesszsz/verne-listener:v1.3  
          #wait for verne container at :1883 to be ready
          command:
            - sh
            - -c
            - |
              export HOST_IP=$(cat /envs/host_ip)
              until netstat -tln | grep -q '127.0.0.1:1883'; do
                sleep 2
              done
              exec /app/listenerproc
          #check log (connection established)
          readinessProbe:
            exec:
              #check if connected to both verneMQTT + PubSub 
              command:
                - sh
                - -c
                - 'grep -q "SUCCESS" /tmp/listener.status' 
                # - 'grep -q "SUCCESS" /tmp/listener.status && grep -q "SUCCESS" /tmp/pub.status' 
            initialDelaySeconds: 10
            periodSeconds: 2
          volumeMounts:
          - name: envs
            mountPath: /envs